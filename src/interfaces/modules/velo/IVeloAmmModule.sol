// SPDX-License-Identifier: BUSL-1.1
pragma solidity 0.8.25;

import "../../external/velo/ICLFactory.sol";
import "../../external/velo/ICLGauge.sol";
import "../../utils/IVeloFarm.sol";
import "../IAmmModule.sol";
import "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";

/**
 * @title IVeloAmmModule Interface
 * @dev Extension of the IAmmModule interface for interaction with the Velo protocol,
 * including functions for handling callback and protocol parameters, as well as accessing
 * Velo-specific contracts and settings.
 */
interface IVeloAmmModule is IAmmModule {
    /**
     * @notice Thrown when the specified fee is invalid.
     */
    error InvalidFee();

    /**
     * @notice Thrown when an address is set to the zero address.
     */
    error AddressZero();

    /**
     * @notice Thrown when array lengths are mismatched or invalid.
     */
    error InvalidLength();

    /**
     * @notice Thrown when the specified gauge is invalid.
     */
    error InvalidGauge();

    /**
     * @dev Struct representing callback parameters for operations associated with the Velo protocol.
     * @param farm Address of the Synthetix farm contract. It acts as a central hub for yield farming activities, interfacing directly
     * with users and other contracts to manage and allocate yield farming rewards based on defined criteria.
     * @param gauge Address of the Velo gauge contract.
     */
    struct CallbackParams {
        address farm; // Synthetix farm contract address for yield farming operations
        address gauge; // Velo gauge contract address
    }

    /**
     * @dev Struct representing the operational parameters specific to the Velo AMM module.
     * These parameters play a crucial role in defining how the module interacts financially
     * with the broader ecosystem, including aspects of fee collection and distribution.
     * @param treasury The address of the Mellow protocol's treasury. This address is used
     * to collect fees generated by the operations within the Velo AMM module.
     * @param feeD9 The fee percentage charged by the Velo AMM module.
     * This fee is denoted in a fixed-point format with 9 decimal places,
     * allowing for precise representation of fee percentages smaller than one percent. For example,
     * a `feeD9` value of 10,000,000 represents a fee of 1%, while a value of 1,000,000 represents
     * a 0.1% fee.
     */
    struct ProtocolParams {
        address treasury; // Mellow protocol treasury address for fee collection
        uint32 feeD9; // Fee percentage, represented as a fixed-point number with 9 decimal places
    }

    /**
     * @dev Returns 10 ** 9, the base for fixed-point calculations.
     * @return uint256 representing 10^9 for fixed-point arithmetic.
     */
    function D9() external view returns (uint256);

    /**
     * @dev Returns the maximum protocol fee allowed within the Velo AMM module.
     * @return uint32 maximum protocol fee as a uint32 value.
     */
    function MAX_PROTOCOL_FEE() external view returns (uint32);

    /**
     * @dev Returns the address of the ICLFactory contract used by the Velo protocol.
     * @return ICLFactory contract address.
     */
    function factory() external view returns (ICLFactory);

    /**
     * @dev Returns the selector of isPool/isPair function of the factory.
     * @return bytes4 function selector.
     */
    function selectorIsPool() external view returns (bytes4);
}
