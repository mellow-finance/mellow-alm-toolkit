name: docs
on:
  push:
    branches:
      - "main"

jobs:
  push-coverage:
    name: Update coverage
    runs-on: ubuntu-latest
    concurrency:
      group: push-coverage
      cancel-in-progress: true
    env:
      MAINNET_RPC: ${{ secrets.mainnet_rpc }}
    steps:
      - name: Checkout main
        uses: actions/checkout@master

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        run: yarn

      - name: Run coverage
        run: yarn coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  push-docs:
    name: Update docs
    runs-on: ubuntu-latest
    concurrency:
      group: push-docs
      cancel-in-progress: true
    env:
      MAINNET_RPC: ${{ secrets.mainnet_rpc }}
      KOVAN_RPC: ${{ secrets.kovan_rpc }}
    steps:
      - name: Checkout main
        uses: actions/checkout@master

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        run: yarn

      - name: Generate gas usage report
        run: rm -rf artifacts && rm -rf test/types && npx hardhat compile --config hardhat.test.config.ts && yarn gastest

      - name: Generate spec report
        run: REPORTER=json yarn test > spec.json

      - name: Autogen docs
        run: yarn docgen

      - name: Push docs
        env:
          DK: ${{secrets.DOCS_DEPLOY_KEY}}
        run: |
          echo -e $DK > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
          eval `ssh-agent -s`
          ssh-add /tmp/id_rsa
          git config --global user.email "docgen@mellow.finance"
          git config --global user.name "DocGen"
          git clone git@github.com:mellow-finance/mellow-docs.git
          cp ./docs/api.md ./mellow-docs/mellow-permissionless-vaults/api.md
          cp ./docs/contracts-specs.md ./mellow-docs/mellow-permissionless-vaults/contracts-specs.md
          cd ./mellow-docs
          git add -A && git commit -m "Updated mellow permissionless vaults api docs" && git push origin main
          rm -rf /tmp/id_rsa
